name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  IMAGE: fastapi-k8s
  IMAGE_TAG: ${{ github.sha }} # unique tag for each build
  GAR_ZONE: us-central1
  GAR_REPO: fastapi

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      image_url: ${{ steps.build_image.outputs.image_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
           credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        id: configure_docker
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      image_url: ${{ steps.build_image.outputs.image_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker Image
        id: build_image
        run: |
          IMAGE_URL="$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"
          docker build --tag "$IMAGE_URL" --build-arg GITHUB_SHA="$GITHUB_SHA" --build-arg GITHUB_REF="$GITHUB_REF" .
          echo "::set-output name=image_url::$IMAGE_URL"

      - name: Push Docker Image to Artifact Registry
        run: |
          docker push "${{ steps.build_image.outputs.image_url }}"

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/fastapi-deployment fastapi-container=${{ needs.build-and-publish.outputs.image_url }}
          kubectl rollout status deployment/fastapi-deployment
          kubectl get pods
